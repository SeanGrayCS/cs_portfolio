/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.graysbinarysearchtree;

import java.awt.Color;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JOptionPane;

/**
 *
 * @author seanp
 */
public class MainWindow extends javax.swing.JFrame {

    private final BSTree tree;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        tree = new BSTree();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_graphics = new javax.swing.JPanel();
        text_input = new javax.swing.JTextField();
        label_input = new javax.swing.JLabel();
        button_input = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel_graphics.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(102, 0, 51)));

        javax.swing.GroupLayout panel_graphicsLayout = new javax.swing.GroupLayout(panel_graphics);
        panel_graphics.setLayout(panel_graphicsLayout);
        panel_graphicsLayout.setHorizontalGroup(
            panel_graphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        panel_graphicsLayout.setVerticalGroup(
            panel_graphicsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 327, Short.MAX_VALUE)
        );

        text_input.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N

        label_input.setText("Enter Number:");

        button_input.setText("Add Number");
        button_input.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_inputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel_graphics, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_input, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(text_input, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(button_input, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(text_input, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
                    .addComponent(label_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(button_input, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(panel_graphics, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_inputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_inputActionPerformed
        try {
            tree.add(Integer.parseInt(text_input.getText()));
            graphTree();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Sorry, this program does "
                    + "not support non-integer inputs.", "Not an Integer", 
                    JOptionPane.ERROR_MESSAGE);
        } finally {
            text_input.setText("");
        }
    }//GEN-LAST:event_button_inputActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    private void graphTree() {
        
        Graphics g = panel_graphics.getGraphics();
        Graphics2D g2d = (Graphics2D) g.create();
        
        int width = panel_graphics.getWidth();
        int height = panel_graphics.getHeight();
        
        g2d.setColor(Color.LIGHT_GRAY);
        g2d.fillRect(0, 0, width, height);
        
        g2d.setFont(new Font("Arial", Font.PLAIN, 12));
        FontMetrics fm = g2d.getFontMetrics();
        
        g2d.setColor(Color.RED);
        g2d.drawString("ROOT", ((width - fm.stringWidth("ROOT")) / 2), 30);
        g.setColor(Color.BLUE);
        drawTree(tree.getRoot(), ((width - fm.stringWidth("" + 
                tree.getRoot().getValue())) / 2), 50, 1, g, 0);
        
        String[] stats = {
            "inOrder = " + tree.inOrder(),
            "preOrder = " + tree.preOrder(),
            "postOrder = " + tree.postOrder(),
            "revOrder = " + tree.revOrder(),
            "height = " + tree.getHeight(),
            "width = " + tree.getWidth(),
            "numLevels = " + tree.getNumLevels(),
            "numLeaves = " + tree.getNumLeaves(),
            "numNodes = " + tree.getNumNodes(),
            "isFullTree = " + tree.isFull()};
        g.setColor(Color.BLACK);
        for (int i = 0; i < 10; i++) {
            int x = ((width - fm.stringWidth(stats[i])) / 2);
            g.drawString(stats[i], x, height - (20 * (10 - i)));
        }
        
    }
    
    private void drawTree(TreeNode tree, int x, int y, int level, Graphics g, int type) {
        
        if (tree == null) {
            return;
        }
        if (type == 1) {
            g.drawLine(x + 12, y - 5, x + (80 / (level - 1)) + 6, y - 20);
        }
        if (type == 2) {
            g.drawLine(x, y - 5, x - (80 / (level - 1)) + 6, y - 20);
        }
        g.drawString("" + tree.getValue(), x, y);
        drawTree(tree.getLeft(), x - (80 / level), y + 20, level + 1, g, 1);
        drawTree(tree.getRight(), x + (80 / level), y + 20, level + 1, g, 2);
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_input;
    private javax.swing.JLabel label_input;
    private javax.swing.JPanel panel_graphics;
    private javax.swing.JTextField text_input;
    // End of variables declaration//GEN-END:variables
}
