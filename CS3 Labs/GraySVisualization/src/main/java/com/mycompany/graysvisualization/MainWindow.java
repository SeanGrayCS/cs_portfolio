/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.graysvisualization;

import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Logger;
import java.util.logging.Level;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.awt.Color;
import java.awt.Graphics;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.ButtonModel;
import javax.swing.ImageIcon;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author seanp
 */
public class MainWindow extends javax.swing.JFrame {

    // Program Data Structures - Instance Variables
    private String currentFile;
    private Double[][] viewport1Data;
    private Object[] viewport1Headers;
    private JCheckBox[] inputs;
    private JComboBox<String>[] input_colors;
    
    private File dataFile;
    private File videoFile;
    
    private Color[] colors;
    
    private DataModel model;
    
    private boolean saved;
    private File saveFile;
    
    private boolean changesMade;
    
    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        
        this.setIconImage(new ImageIcon("assets\\VB_Logo.png").getImage());
        this.setTitle("Data Visualization");
        
        currentFile = "DAT";
        videoFile = new File("");
        dataFile = new File("");
        
        initColors();
        initInputs();
        initInputColors();
        
        enableGraphControls(true);
        setGraphControlVisibility(false);
        changesMade = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        data_scrollpane = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        buttonGroup_viewport2 = new javax.swing.ButtonGroup();
        panel_inputs = new javax.swing.JPanel();
        input_1 = new javax.swing.JCheckBox();
        input_2 = new javax.swing.JCheckBox();
        input_7 = new javax.swing.JCheckBox();
        input_3 = new javax.swing.JCheckBox();
        input_6 = new javax.swing.JCheckBox();
        input_4 = new javax.swing.JCheckBox();
        input_5 = new javax.swing.JCheckBox();
        input_8 = new javax.swing.JCheckBox();
        input_9 = new javax.swing.JCheckBox();
        input_1_color = new javax.swing.JComboBox<>();
        input_2_color = new javax.swing.JComboBox<>();
        input_3_color = new javax.swing.JComboBox<>();
        input_4_color = new javax.swing.JComboBox<>();
        input_5_color = new javax.swing.JComboBox<>();
        input_6_color = new javax.swing.JComboBox<>();
        input_7_color = new javax.swing.JComboBox<>();
        input_8_color = new javax.swing.JComboBox<>();
        input_9_color = new javax.swing.JComboBox<>();
        input_10 = new javax.swing.JCheckBox();
        input_11 = new javax.swing.JCheckBox();
        input_12 = new javax.swing.JCheckBox();
        input_10_color = new javax.swing.JComboBox<>();
        input_11_color = new javax.swing.JComboBox<>();
        input_12_color = new javax.swing.JComboBox<>();
        panel_viewport2 = new javax.swing.JPanel();
        scrollPane_video = new javax.swing.JScrollPane();
        video_panel = new VideoPanel();
        viewport2_file_label = new javax.swing.JLabel();
        viewport2_textField = new javax.swing.JTextField();
        viewport2_file_button = new javax.swing.JButton();
        radio_data = new javax.swing.JRadioButton();
        radio_video = new javax.swing.JRadioButton();
        playPause_button = new javax.swing.JToggleButton();
        forward_button = new javax.swing.JButton();
        backward_button = new javax.swing.JButton();
        front_button = new javax.swing.JButton();
        end_button = new javax.swing.JButton();
        panel_viewport1 = new javax.swing.JPanel();
        slider_viewport1 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewport1 = new GraphPanel();
        viewport1_file_button = new javax.swing.JButton();
        viewport1_textField = new javax.swing.JTextField();
        viewport1_file_label = new javax.swing.JLabel();
        menu_bar = new javax.swing.JMenuBar();
        menu_item_file = new javax.swing.JMenu();
        menu_item_file_open = new javax.swing.JMenuItem();
        menu_item_file_save = new javax.swing.JMenuItem();
        menu_item_file_save_as = new javax.swing.JMenuItem();
        menu_item_file_close = new javax.swing.JMenuItem();

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        data_scrollpane.setViewportView(dataTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1440, 620));

        input_1.setText("Input 1");
        input_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_1ActionPerformed(evt);
            }
        });

        input_2.setText("Input 2");
        input_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_2ActionPerformed(evt);
            }
        });

        input_7.setText("Input 7");
        input_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_7ActionPerformed(evt);
            }
        });

        input_3.setText("Input 3");
        input_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_3ActionPerformed(evt);
            }
        });

        input_6.setText("Input 6");
        input_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_6ActionPerformed(evt);
            }
        });

        input_4.setText("Input 4");
        input_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_4ActionPerformed(evt);
            }
        });

        input_5.setText("Input 5");
        input_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_5ActionPerformed(evt);
            }
        });

        input_8.setText("Input 8");
        input_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_8ActionPerformed(evt);
            }
        });

        input_9.setText("Input 9");
        input_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_9ActionPerformed(evt);
            }
        });

        input_1_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_1_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_1_colorActionPerformed(evt);
            }
        });

        input_2_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_2_color.setSelectedIndex(1);
        input_2_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_2_colorActionPerformed(evt);
            }
        });

        input_3_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_3_color.setSelectedIndex(2);
        input_3_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_3_colorActionPerformed(evt);
            }
        });

        input_4_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_4_color.setSelectedIndex(3);
        input_4_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_4_colorActionPerformed(evt);
            }
        });

        input_5_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_5_color.setSelectedIndex(4);
        input_5_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_5_colorActionPerformed(evt);
            }
        });

        input_6_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_6_color.setSelectedIndex(5);
        input_6_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_6_colorActionPerformed(evt);
            }
        });

        input_7_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_7_color.setSelectedIndex(6);
        input_7_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_7_colorActionPerformed(evt);
            }
        });

        input_8_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_8_color.setSelectedIndex(7);
        input_8_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_8_colorActionPerformed(evt);
            }
        });

        input_9_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_9_color.setSelectedIndex(8);
        input_9_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_9_colorActionPerformed(evt);
            }
        });

        input_10.setText("Input 10");
        input_10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_10ActionPerformed(evt);
            }
        });

        input_11.setText("Input 11");
        input_11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_11ActionPerformed(evt);
            }
        });

        input_12.setText("Input 12");
        input_12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_12ActionPerformed(evt);
            }
        });

        input_10_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_10_color.setSelectedIndex(9);
        input_10_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_10_colorActionPerformed(evt);
            }
        });

        input_11_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_11_color.setSelectedIndex(10);
        input_11_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_11_colorActionPerformed(evt);
            }
        });

        input_12_color.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Cyan", "Dark Gray", "Green", "Magenta", "Orange", "Pink", "Red", "Yellow", "Light Gray", "White" }));
        input_12_color.setSelectedIndex(11);
        input_12_color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                input_12_colorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_inputsLayout = new javax.swing.GroupLayout(panel_inputs);
        panel_inputs.setLayout(panel_inputsLayout);
        panel_inputsLayout.setHorizontalGroup(
            panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_inputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(input_1_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_6_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_2_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_4_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_3_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_5_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_7_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_8_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_9_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_12_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_10_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panel_inputsLayout.createSequentialGroup()
                        .addComponent(input_11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(input_11_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panel_inputsLayout.setVerticalGroup(
            panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_inputsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_1)
                    .addComponent(input_1_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_2)
                    .addComponent(input_2_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_3)
                    .addComponent(input_3_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_4)
                    .addComponent(input_4_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_5)
                    .addComponent(input_5_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_6)
                    .addComponent(input_6_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_7)
                    .addComponent(input_7_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_8)
                    .addComponent(input_8_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_9)
                    .addComponent(input_9_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_10)
                    .addComponent(input_10_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_11)
                    .addComponent(input_11_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panel_inputsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_12)
                    .addComponent(input_12_color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panel_viewport2.setMaximumSize(new java.awt.Dimension(730, 562));

        scrollPane_video.setMinimumSize(new java.awt.Dimension(720, 480));
        scrollPane_video.setPreferredSize(new java.awt.Dimension(720, 480));

        video_panel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout video_panelLayout = new javax.swing.GroupLayout(video_panel);
        video_panel.setLayout(video_panelLayout);
        video_panelLayout.setHorizontalGroup(
            video_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 714, Short.MAX_VALUE)
        );
        video_panelLayout.setVerticalGroup(
            video_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 474, Short.MAX_VALUE)
        );

        scrollPane_video.setViewportView(video_panel);

        viewport2_file_label.setText("Video File:");

        viewport2_textField.setEditable(false);

        viewport2_file_button.setText("Choose File");
        viewport2_file_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewport2_file_buttonActionPerformed(evt);
            }
        });

        buttonGroup_viewport2.add(radio_data);
        radio_data.setText("Data");
        radio_data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_dataActionPerformed(evt);
            }
        });

        buttonGroup_viewport2.add(radio_video);
        radio_video.setText("Video");
        radio_video.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio_videoActionPerformed(evt);
            }
        });

        playPause_button.setText("Play|");
        playPause_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playPause_buttonActionPerformed(evt);
            }
        });

        forward_button.setText(">");
        forward_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forward_buttonActionPerformed(evt);
            }
        });

        backward_button.setText("<");
        backward_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backward_buttonActionPerformed(evt);
            }
        });

        front_button.setText("|<");
        front_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                front_buttonActionPerformed(evt);
            }
        });

        end_button.setText(">|");
        end_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                end_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel_viewport2Layout = new javax.swing.GroupLayout(panel_viewport2);
        panel_viewport2.setLayout(panel_viewport2Layout);
        panel_viewport2Layout.setHorizontalGroup(
            panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_viewport2Layout.createSequentialGroup()
                .addGroup(panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panel_viewport2Layout.createSequentialGroup()
                        .addGap(217, 217, 217)
                        .addComponent(radio_data)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(radio_video))
                    .addGroup(panel_viewport2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(viewport2_file_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(viewport2_textField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(viewport2_file_button)))
                .addGap(18, 18, 18))
            .addGroup(panel_viewport2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPane_video, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panel_viewport2Layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(playPause_button)
                        .addGap(80, 80, 80)
                        .addComponent(forward_button)
                        .addGap(80, 80, 80)
                        .addComponent(backward_button)
                        .addGap(80, 80, 80)
                        .addComponent(front_button)
                        .addGap(80, 80, 80)
                        .addComponent(end_button)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        panel_viewport2Layout.setVerticalGroup(
            panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_viewport2Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio_data)
                    .addComponent(radio_video))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewport2_file_label)
                    .addComponent(viewport2_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewport2_file_button))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPane_video, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panel_viewport2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(playPause_button)
                    .addComponent(forward_button)
                    .addComponent(backward_button)
                    .addComponent(front_button)
                    .addComponent(end_button))
                .addContainerGap())
        );

        slider_viewport1.setValue(0);
        slider_viewport1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slider_viewport1StateChanged(evt);
            }
        });

        viewport1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        viewport1.setPreferredSize(new java.awt.Dimension(560, 440));

        javax.swing.GroupLayout viewport1Layout = new javax.swing.GroupLayout(viewport1);
        viewport1.setLayout(viewport1Layout);
        viewport1Layout.setHorizontalGroup(
            viewport1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 556, Short.MAX_VALUE)
        );
        viewport1Layout.setVerticalGroup(
            viewport1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 436, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(viewport1);

        viewport1_file_button.setText("Choose File");
        viewport1_file_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewport1_file_buttonActionPerformed(evt);
            }
        });

        viewport1_textField.setEditable(false);

        viewport1_file_label.setText("Data File:");

        javax.swing.GroupLayout panel_viewport1Layout = new javax.swing.GroupLayout(panel_viewport1);
        panel_viewport1.setLayout(panel_viewport1Layout);
        panel_viewport1Layout.setHorizontalGroup(
            panel_viewport1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_viewport1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewport1_file_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewport1_textField)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(viewport1_file_button)
                .addContainerGap())
            .addComponent(slider_viewport1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panel_viewport1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        panel_viewport1Layout.setVerticalGroup(
            panel_viewport1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_viewport1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(panel_viewport1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewport1_file_button)
                    .addComponent(viewport1_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(viewport1_file_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(slider_viewport1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        menu_item_file.setText("File");

        menu_item_file_open.setText("Open");
        menu_item_file_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_file_openActionPerformed(evt);
            }
        });
        menu_item_file.add(menu_item_file_open);

        menu_item_file_save.setText("Save");
        menu_item_file_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_file_saveActionPerformed(evt);
            }
        });
        menu_item_file.add(menu_item_file_save);

        menu_item_file_save_as.setText("Save As");
        menu_item_file_save_as.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_file_save_asActionPerformed(evt);
            }
        });
        menu_item_file.add(menu_item_file_save_as);

        menu_item_file_close.setText("Close");
        menu_item_file_close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menu_item_file_closeActionPerformed(evt);
            }
        });
        menu_item_file.add(menu_item_file_close);

        menu_bar.add(menu_item_file);

        setJMenuBar(menu_bar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel_inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(panel_viewport1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(panel_viewport2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel_viewport1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panel_inputs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(panel_viewport2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void input_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_9ActionPerformed
        if (viewport1Data[0].length > 9) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_9ActionPerformed

    private void input_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_8ActionPerformed
        if (viewport1Data[0].length > 8) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_8ActionPerformed

    private void input_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_5ActionPerformed
        if (viewport1Data[0].length > 5) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_5ActionPerformed

    private void input_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_4ActionPerformed
        if (viewport1Data[0].length > 4) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_4ActionPerformed

    private void input_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_6ActionPerformed
        if (viewport1Data[0].length > 6) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_6ActionPerformed

    private void input_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_3ActionPerformed
        if (viewport1Data[0].length > 3) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_3ActionPerformed

    private void input_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_7ActionPerformed
        if (viewport1Data[0].length > 7) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_7ActionPerformed

    private void input_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_2ActionPerformed
        if (viewport1Data[0].length > 2) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_2ActionPerformed

    private void input_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_1ActionPerformed
        if (viewport1Data[0].length > 1) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_1ActionPerformed

    private void input_1_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_1_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_1_colorActionPerformed

    private void input_2_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_2_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_2_colorActionPerformed

    private void input_3_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_3_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_3_colorActionPerformed

    private void input_4_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_4_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_4_colorActionPerformed

    private void input_5_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_5_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_5_colorActionPerformed

    private void input_6_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_6_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_6_colorActionPerformed

    private void input_7_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_7_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_7_colorActionPerformed

    private void input_8_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_8_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_8_colorActionPerformed

    private void input_9_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_9_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_9_colorActionPerformed

    private void input_10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_10ActionPerformed
        if (viewport1Data[0].length > 10) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_10ActionPerformed

    private void input_11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_11ActionPerformed
        if (viewport1Data[0].length > 11) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_11ActionPerformed

    private void input_12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_12ActionPerformed
        if (viewport1Data[0].length > 12) {
            buildGraph();
        } else {
            System.out.println("No data for this input.");
        }
    }//GEN-LAST:event_input_12ActionPerformed

    private void input_10_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_10_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_10_colorActionPerformed

    private void input_11_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_11_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_11_colorActionPerformed

    private void input_12_colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_input_12_colorActionPerformed
        buildGraph();
    }//GEN-LAST:event_input_12_colorActionPerformed

    private void menu_item_file_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_file_saveActionPerformed
        // Save operations works off of a data model. The model is created and
        // then the entire model object is written to the disk.
        try {
            if (!saved) {
                menu_item_file_save_asActionPerformed(evt);
            }
            if (!saved) {
                return;
            }
            FileOutputStream fos = new FileOutputStream(saveFile);
            ObjectOutputStream oos
                    = new ObjectOutputStream(fos);
            
            if (viewport1Data == null) {
                return;
            }
            
            boolean[] lineInputs = new boolean[inputs.length];
            int[] colorInputs = new int[input_colors.length];
            
            for (int i = 0; i < inputs.length; i++) {
                lineInputs[i] = inputs[i].isSelected();
                colorInputs[i] = input_colors[i].getSelectedIndex();
            }

            oos.writeObject(new DataModel(viewport1Data,
                    viewport1Headers, lineInputs, colorInputs, dataFile,
                    videoFile));

            oos.close();
            fos.close();
            changesMade = false;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainWindow.class.getName())
                    .log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(MainWindow.class.getName())
                    .log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "File Not Found",
                    "ERROR: " + ex.toString(), JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_menu_item_file_saveActionPerformed

    private void menu_item_file_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_file_openActionPerformed
        // Opens a data model from the disk, and replaces instance variables
        // with those from the data model.
        
        JFileChooser jfc = new JFileChooser("DAT/SavedRuns");
        
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                FileInputStream fis = new FileInputStream(jfc.getSelectedFile());
                ObjectInputStream ois = 
                        new ObjectInputStream(fis);
                
                saveFile = jfc.getSelectedFile();
                
                DataModel dataModel = (DataModel)ois.readObject();
                
                viewport1Data = dataModel.getViewport1Data();
                viewport1Headers = dataModel.getViewport1Headers();
                
                for (int i = 0; i < inputs.length ; i++) {
                    inputs[i].setVisible(true);
                    input_colors[i].setVisible(true);
                }
                
                for (int i = viewport1Headers.length; i < inputs.length; i++) {
                    inputs[i].setVisible(false);
                    input_colors[i].setVisible(false);
                }
                
                for (int i = 0; i < inputs.length; i++) {
                    inputs[i].setSelected(dataModel.getInputs()[i]);
                    input_colors[i].setSelectedIndex(dataModel.getInput_colors()[i]);
                }
            
                panel_inputs.setVisible(true);
                
                dataFile = dataModel.getDataFile();
                videoFile = dataModel.getVideoFile();
                
                viewport1_textField.setText(dataFile.getName());
                viewport2_textField.setText(videoFile.getName());
                saveFile = jfc.getSelectedFile();
                
                video_panel = new VideoPanel();
                scrollPane_video.setViewportView(video_panel);
                radio_video.setSelected(true);
                ((VideoPanel)video_panel).start(videoFile);
                
                ois.close();
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(MainWindow.class.getName())
                        .log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(MainWindow.class.getName())
                        .log(Level.SEVERE, null, ex);
            }        
        }
    }//GEN-LAST:event_menu_item_file_openActionPerformed

    private void viewport2_file_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewport2_file_buttonActionPerformed
        JFileChooser jfc = new JFileChooser(currentFile);

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            video_panel = new VideoPanel();
            scrollPane_video.setViewportView(video_panel);
            
            videoFile = jfc.getSelectedFile();
            viewport2_textField.setText(videoFile.getName());
            radio_video.setSelected(true);
            ((VideoPanel)video_panel).start(videoFile);
            changesMade = true;
        }
        
    }//GEN-LAST:event_viewport2_file_buttonActionPerformed

    private void viewport1_file_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewport1_file_buttonActionPerformed
        JFileChooser jfc = new JFileChooser(currentFile);

        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            dataFile = jfc.getSelectedFile();
            loadDataFile(dataFile);
            viewport1_textField.setText(dataFile.getName());
            panel_inputs.setVisible(true);
            changesMade = true;
        }
    }//GEN-LAST:event_viewport1_file_buttonActionPerformed

    private void slider_viewport1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slider_viewport1StateChanged
        int sliderValue = slider_viewport1.getValue();
        ((GraphPanel)viewport1).setScaleFactor(sliderValue);
    }//GEN-LAST:event_slider_viewport1StateChanged

    private void menu_item_file_save_asActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_file_save_asActionPerformed
        if (!saved) {
            JFileChooser jfc = new JFileChooser("DAT\\SavedRuns");
        
            if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                saveFile = jfc.getSelectedFile();
                saved = true;
                menu_item_file_saveActionPerformed(evt);
            }   
        }
        return;
    }//GEN-LAST:event_menu_item_file_save_asActionPerformed

    private void playPause_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playPause_buttonActionPerformed
        if(!playPause_button.isSelected()) {
            //Pause
            playPause_button.setText("Play|");
            ((VideoPanel)video_panel).pause();
        } else {
            //Play
            playPause_button.setText(" | | ");
            ((VideoPanel)video_panel).play();
        }
    }//GEN-LAST:event_playPause_buttonActionPerformed

    private void forward_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forward_buttonActionPerformed
        ((VideoPanel)video_panel).forward();
    }//GEN-LAST:event_forward_buttonActionPerformed

    private void backward_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backward_buttonActionPerformed
        ((VideoPanel)video_panel).backward();
    }//GEN-LAST:event_backward_buttonActionPerformed

    private void front_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_front_buttonActionPerformed
        ((VideoPanel)video_panel).front();
        ((VideoPanel)video_panel).pause();
        playPause_button.setText("Play|");
        playPause_button.setSelected(false);
    }//GEN-LAST:event_front_buttonActionPerformed

    private void end_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_end_buttonActionPerformed
        ((VideoPanel)video_panel).end();
        playPause_button.setText("Play|");
        playPause_button.setSelected(false);
    }//GEN-LAST:event_end_buttonActionPerformed

    private void menu_item_file_closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menu_item_file_closeActionPerformed
        if (changesMade) {
            menu_item_file_saveActionPerformed(evt);
        }
        System.exit(0);
    }//GEN-LAST:event_menu_item_file_closeActionPerformed

    private void radio_dataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_dataActionPerformed
        if (dataFile.toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Please choose a data file " +
                    "to display.", "No Data File", JOptionPane.WARNING_MESSAGE);
            buttonGroup_viewport2.clearSelection();
        } else {
            scrollPane_video.setViewportView(data_scrollpane);
        }
    }//GEN-LAST:event_radio_dataActionPerformed

    private void radio_videoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio_videoActionPerformed
        if (videoFile.toString().equals("")) {
            JOptionPane.showMessageDialog(this, "Please choose a video file " +
                    "to display.", "No Video File", JOptionPane.WARNING_MESSAGE);
            buttonGroup_viewport2.clearSelection();
        } else {
            scrollPane_video.setViewportView(video_panel);
            ((VideoPanel)video_panel).start(videoFile);
        }
    }//GEN-LAST:event_radio_videoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backward_button;
    private javax.swing.ButtonGroup buttonGroup_viewport2;
    private javax.swing.JTable dataTable;
    private javax.swing.JScrollPane data_scrollpane;
    private javax.swing.JButton end_button;
    private javax.swing.JButton forward_button;
    private javax.swing.JButton front_button;
    private javax.swing.JCheckBox input_1;
    private javax.swing.JCheckBox input_10;
    private javax.swing.JComboBox<String> input_10_color;
    private javax.swing.JCheckBox input_11;
    private javax.swing.JComboBox<String> input_11_color;
    private javax.swing.JCheckBox input_12;
    private javax.swing.JComboBox<String> input_12_color;
    private javax.swing.JComboBox<String> input_1_color;
    private javax.swing.JCheckBox input_2;
    private javax.swing.JComboBox<String> input_2_color;
    private javax.swing.JCheckBox input_3;
    private javax.swing.JComboBox<String> input_3_color;
    private javax.swing.JCheckBox input_4;
    private javax.swing.JComboBox<String> input_4_color;
    private javax.swing.JCheckBox input_5;
    private javax.swing.JComboBox<String> input_5_color;
    private javax.swing.JCheckBox input_6;
    private javax.swing.JComboBox<String> input_6_color;
    private javax.swing.JCheckBox input_7;
    private javax.swing.JComboBox<String> input_7_color;
    private javax.swing.JCheckBox input_8;
    private javax.swing.JComboBox<String> input_8_color;
    private javax.swing.JCheckBox input_9;
    private javax.swing.JComboBox<String> input_9_color;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuBar menu_bar;
    private javax.swing.JMenu menu_item_file;
    private javax.swing.JMenuItem menu_item_file_close;
    private javax.swing.JMenuItem menu_item_file_open;
    private javax.swing.JMenuItem menu_item_file_save;
    private javax.swing.JMenuItem menu_item_file_save_as;
    private javax.swing.JPanel panel_inputs;
    private javax.swing.JPanel panel_viewport1;
    private javax.swing.JPanel panel_viewport2;
    private javax.swing.JToggleButton playPause_button;
    private javax.swing.JRadioButton radio_data;
    private javax.swing.JRadioButton radio_video;
    private javax.swing.JScrollPane scrollPane_video;
    private javax.swing.JSlider slider_viewport1;
    private javax.swing.JPanel video_panel;
    private javax.swing.JPanel viewport1;
    private javax.swing.JButton viewport1_file_button;
    private javax.swing.JLabel viewport1_file_label;
    private javax.swing.JTextField viewport1_textField;
    private javax.swing.JButton viewport2_file_button;
    private javax.swing.JLabel viewport2_file_label;
    private javax.swing.JTextField viewport2_textField;
    // End of variables declaration//GEN-END:variables
    
    private void initColors() {
        colors = new Color[12];
        colors[0] = Color.BLACK;
        colors[1] = Color.BLUE;
        colors[2] = Color.CYAN;
        colors[3] = Color.DARK_GRAY;
        colors[4] = Color.GREEN;
        colors[5] = Color.MAGENTA;
        colors[6] = Color.ORANGE;
        colors[7] = Color.PINK;
        colors[8] = Color.RED;
        colors[9] = Color.YELLOW;
        colors[10] = Color.LIGHT_GRAY;
        colors[11] = Color.WHITE;
    }
    
    private void initInputs() {
        inputs = new JCheckBox[13];
        inputs[0] = new JCheckBox();
        inputs[1] = input_1;
        inputs[2] = input_2;
        inputs[3] = input_3;
        inputs[4] = input_4;
        inputs[5] = input_5;
        inputs[6] = input_6;
        inputs[7] = input_7;
        inputs[8] = input_8;
        inputs[9] = input_9;
        inputs[10] = input_10;
        inputs[11] = input_11;
        inputs[12] = input_12;
    }
    
    private void initInputColors() {
        input_colors = new JComboBox[13];
        input_colors[0] = new JComboBox();
        input_colors[1] = input_1_color;
        input_colors[2] = input_2_color;
        input_colors[3] = input_3_color;
        input_colors[4] = input_4_color;
        input_colors[5] = input_5_color;
        input_colors[6] = input_6_color;
        input_colors[7] = input_7_color;
        input_colors[8] = input_8_color;
        input_colors[9] = input_9_color;
        input_colors[10] = input_10_color;
        input_colors[11] = input_11_color;
        input_colors[12] = input_12_color;
    }
    
    private void enableGraphControls(boolean state) {
        for (JCheckBox input : inputs) {
            input.setVisible(state);
        }
        for (JComboBox<String> input_color : input_colors) {
            input_color.setVisible(state);
        }
    }
    
    private void setGraphControlVisibility(boolean state) {
        panel_inputs.setVisible(state);
    }
    
    private void loadDataFile(File file) {
        try {
            Scanner fileScanner = new Scanner(file);
            
            ArrayList<String> tempHeaders = new ArrayList<>();
            
            String firstLine = fileScanner.nextLine();
            Scanner headerLine = new Scanner(firstLine);
            headerLine.useDelimiter(",");
            
            while (headerLine.hasNext()) {
                tempHeaders.add(headerLine.next());
            }
            
            viewport1Headers = new Object[tempHeaders.size()];
            for (int i = 0; i < tempHeaders.size(); i++) {
                viewport1Headers[i] = tempHeaders.get(i);
            }
            
            ArrayList<String> lineList = new ArrayList();
            
            while (fileScanner.hasNextLine()) {
                lineList.add(fileScanner.nextLine());
            }
            
            viewport1Data = new Double[lineList.size()][tempHeaders.size()];
            
            int count = 0;
            for (String line : lineList) {
                String[] lineArr = line.split(",");
                int colCount = 0;
                for (String col : lineArr) {
                    viewport1Data[count][colCount] = Double.parseDouble(col);
                    colCount++;
                }
                count++;
            }
            
            for (int i = 1; i < tempHeaders.size(); i++) {
                inputs[i].setText(tempHeaders.get(i));
            }
            
            for (int i = 0; i < inputs.length; i++) {
                inputs[i].setVisible(true);
                input_colors[i].setVisible(true);
                inputs[i].setSelected(false);
                input_colors[i].setSelectedIndex(i - 1);
            }
            
            for (int i = tempHeaders.size(); i < inputs.length; i++) {
                inputs[i].setVisible(false);
                input_colors[i].setVisible(false);
            }
            
            dataTable = new JTable(viewport1Data, viewport1Headers);
            data_scrollpane.setViewportView(dataTable);
            
            panel_inputs.setVisible(true);
            
        } catch (FileNotFoundException e) {
            Logger.getLogger(MainWindow.class.getName()).log(Level.SEVERE,
                    null, e);
        }
    }
    
    private void buildGraph() {
        // Iterates through inputs array to check if a line should be drawn.
        // For each line, it passes the index of the column to getLineData() to
        // get the data to be graphed. Then graphLine() will draw the line.
        
        // Loop through the inputs, determine when to draw lines, the draws the
        // lines for the input.
        ArrayList<Line> lineList = new ArrayList<>();
        ((GraphPanel)viewport1).setTime(new Line(getLineData(0), Color.BLACK));
        
        for (int i = 0; i < inputs.length; i++) {
            if (inputs[i].isSelected()) {
                double[] data = getLineData(i);
                Color selectedColor = 
                        colors[input_colors[i].getSelectedIndex()];

                // Add a line with the data and color to a lines list.
                lineList.add(new Line(data, selectedColor));
            }
        }
        
        // Set the lines in GraphPanel to the lines list.
        ((GraphPanel)viewport1).setLines(lineList);
        
        changesMade = true;
        
    }
    
    private double[] getLineData (int col) {
        double[] data = new double[viewport1Data.length];
        
        for (int row = 0; row < viewport1Data.length; row++) {
            data[row] = viewport1Data[row][col];
        }
        
        return data;
    }  
    
}