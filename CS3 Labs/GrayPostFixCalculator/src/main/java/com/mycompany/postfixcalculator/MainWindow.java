/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.postfixcalculator;

import java.util.Stack;

/**
 *
 * @author seanp
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField_input = new javax.swing.JTextField();
        textField_output = new javax.swing.JTextField();
        button_solve = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textField_output.setEditable(false);

        button_solve.setText("Solve Equation");
        button_solve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_solveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(button_solve, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE)
                    .addComponent(textField_input)
                    .addComponent(textField_output))
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textField_input, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(button_solve, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(textField_output, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_solveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_solveActionPerformed
        String input = textField_input.getText();
        String lessThan2ErrorMsg = "Error: Invalid Expression: Cannot Operate on Less Than 2 Numbers";
        Stack<Double> calcStack = new Stack<>();
        while (input.length() > 0) {
            boolean continueLoop = false;
            if (input.contains(" ") &&
                    input.substring(0, input.indexOf(" ")).length() != 1) {
                textField_output.setText("Error: Invalid Expression: Length of \"" 
                        + input.substring(0, input.indexOf(" ")) + "\" not 1");
                return;
            }
            switch (input.charAt(0)) {
                case '+' -> {
                    if (calcStack.size() > 1) {
                        double num2 = calcStack.pop();
                        double num1 = calcStack.pop();
                        calcStack.push(num1 + num2);
                    } else {
                        textField_output.setText(lessThan2ErrorMsg);
                        return;
                    }
                    break;
                }
                case '-' -> {
                    if (calcStack.size() > 1) {
                        double num2 = calcStack.pop();
                        double num1 = calcStack.pop();
                        calcStack.push(num1 - num2);
                    } else {
                        textField_output.setText(lessThan2ErrorMsg);
                        return;
                    }
                    break;
                }
                case '*' -> {
                    if (calcStack.size() > 1) {
                        double num2 = calcStack.pop();
                        double num1 = calcStack.pop();
                        calcStack.push(num1 * num2);
                    } else {
                        textField_output.setText(lessThan2ErrorMsg);
                        return;
                    }
                    break;
                }
                case '/' -> {
                    if (calcStack.size() > 1) {
                        double num2 = calcStack.pop();
                        double num1 = calcStack.pop();
                        calcStack.push(num1 / num2);
                    } else {
                        textField_output.setText(lessThan2ErrorMsg);
                        return;
                    }
                    break;
                }
                default -> calcStack.push(Double.parseDouble(input.substring(0, 1)));
                }
            if (input.contains(" ") && !continueLoop) {
                input = input.substring(2);
            } else if (input.length() < 3) {
                input = "";
            }
        }
        if (calcStack.size() > 1) {
            textField_output.setText("Error: Invalid Expression: Left with More Than 1 Value After Operating");
        } else if (calcStack.size() < 1) {
            textField_output.setText("Error: Invalid Expression: No Values");
        } else {
            textField_output.setText("" + calcStack.pop());
        }
    }//GEN-LAST:event_button_solveActionPerformed
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_solve;
    private javax.swing.JTextField textField_input;
    private javax.swing.JTextField textField_output;
    // End of variables declaration//GEN-END:variables
}
