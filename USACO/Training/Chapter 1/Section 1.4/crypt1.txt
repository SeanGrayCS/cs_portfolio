/*
ID: sean.gr1
LANG: JAVA
TASK: crypt1
*/
import java.io.*;
import java.util.*;

class crypt1 {
  public static void main (String [] args) throws IOException {
    String f = "crypt1.in";
    String o = "crypt1.out";

    BufferedReader in = new BufferedReader(new InputStreamReader(new FileInputStream(f)));
    PrintWriter out = new PrintWriter(new BufferedWriter(new FileWriter(o)));

    int n = Integer.parseInt(in.readLine());

    HashSet<Integer> digits = new HashSet<>();

    StringTokenizer st = new StringTokenizer(in.readLine());
    for (int i = 0; i < n; i++) {
      digits.add(Integer.parseInt(st.nextToken()));
    }

    int numSol = 0;

    Iterator<Integer> it1 = digits.iterator();
    while (it1.hasNext()) {
      int d1 = it1.next();

      Iterator<Integer> it2 = digits.iterator();
      while (it2.hasNext()) {
	int d2 = it2.next();

	Iterator<Integer> it3 = digits.iterator();
	while (it3.hasNext()) {
	  int d3 = it3.next();
	  int val1 = d1*100 + d2*10 + d3;

	  Iterator<Integer> it4 = digits.iterator();
	  while (it4.hasNext()) {
	    int d4 = it4.next();

	    // Check partial 1
	    int part1 = val1*d4;
	    if (!resultConforms("" + part1, 3, digits)) {
	      continue;
	    }

	    Iterator<Integer> it5 = digits.iterator();
	    while (it5.hasNext()) {
	      int d5 = it5.next();

	      // Check partial 2
	      int part2 = val1*d5;
	      if (!resultConforms("" + part2, 3, digits)) {
		continue;
	      }

	      // Check product
	      int prod = part1*10 + part2;
	      if (resultConforms("" + prod, 4, digits)) {
	 	numSol++;
		//System.out.println(val1 + " " + part1 + " " + part2 + " " + prod);
	      }
	    }
	  }
	}
      }
    }

    out.println("" + numSol);

    out.close();
  }

  private static boolean resultConforms (String result, int numDigits, HashSet<Integer> digits) {
    int len = result.length();
    if (len != numDigits) {
      return false;
    }

    for (int i = 0; i < numDigits; i++) {
      if (!digits.contains(Integer.parseInt("" + result.charAt(i)))) {
	return false;
      }
    }

    return true;
  }
}